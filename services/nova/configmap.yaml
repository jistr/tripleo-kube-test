apiVersion: v1
kind: ConfigMap
metadata:
  name: nova-kolla-config
  namespace: default
  labels:
    service: nova-api
data:
  config.json: |
    {
        "command": "/usr/sbin/httpd -DFOREGROUND",
        "config_files": [
          {
            "dest": "/etc/httpd/conf/httpd.conf",
            "owner": "root",
            "perm": "0644",
            "source": "/var/lib/kolla/config_files/httpd.conf"
          },
          {
            "dest": "/etc/nova/nova.conf",
            "owner": "nova",
            "perm": "0644",
            "source": "/var/lib/kolla/config_files/nova.conf"
          },
          {
            "dest": "/etc/httpd/conf.d/10-nova-api.conf",
            "owner": "root",
            "perm": "0644",
            "source": "/var/lib/kolla/config_files/httpd-nova-api.conf"
          }
        ]
    }
  nova.conf: |
    [DEFAULT]
    bind_host = 0.0.0.0
    [database]
    connection=mysql+pymysql://root:weakpassword@mariadb:3306/nova
    [api_database]
    connection=mysql+pymysql://root:weakpassword@mariadb:3306/nova_api
  httpd.conf: |
    Listen *:8774

    ServerRoot "/etc/httpd"
    DocumentRoot "/var/www/html"
    User apache
    Group apache

    Include conf.modules.d/*.conf

    <Directory />
        AllowOverride none
        Require all denied
    </Directory>

    <Directory "/var/www">
        AllowOverride None
        # Allow open access:
        Require all granted
    </Directory>

    <Directory "/var/www/cgi-bin">
        AllowOverride None
        Options None
        Require all granted
    </Directory>

    <IfModule dir_module>
        DirectoryIndex index.html
    </IfModule>

    <Files ".ht*">
        Require all denied
    </Files>

    ErrorLog /dev/stderr
    <IfModule log_config_module>
        LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
        LogFormat "%h %l %u %t \"%r\" %>s %b" common

        <IfModule logio_module>
          # You need to enable mod_logio.c to use %I and %O
          LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
        </IfModule>

        CustomLog /dev/stdout combined
    </IfModule>

    <IfModule mime_module>
        #
        # TypesConfig points to the file containing the list of mappings from
        # filename extension to MIME-type.
        #
        TypesConfig /etc/mime.types

        #
        # AddType allows you to add to or override the MIME configuration
        # file specified in TypesConfig for specific file types.
        #
        #AddType application/x-gzip .tgz
        #
        # AddEncoding allows you to have certain browsers uncompress
        # information on the fly. Note: Not all browsers support this.
        #
        #AddEncoding x-compress .Z
        #AddEncoding x-gzip .gz .tgz
        #
        # If the AddEncoding directives above are commented-out, then you
        # probably should define those extensions to indicate media types:
        #
        AddType application/x-compress .Z
        AddType application/x-gzip .gz .tgz

        #
        # AddHandler allows you to map certain file extensions to "handlers":
        # actions unrelated to filetype. These can be either built into the server
        # or added with the Action directive (see below)
        #
        # To use CGI scripts outside of ScriptAliased directories:
        # (You will also need to add "ExecCGI" to the "Options" directive.)
        #
        #AddHandler cgi-script .cgi

        # For type maps (negotiated resources):
        #AddHandler type-map var

        #
        # Filters allow you to process content before it is sent to the client.
        #
        # To parse .shtml files for server-side includes (SSI):
        # (You will also need to add "Includes" to the "Options" directive.)
        #
        AddType text/html .shtml
        AddOutputFilter INCLUDES .shtml
    </IfModule>

    AddDefaultCharset UTF-8

    <IfModule mime_magic_module>
        #
        # The mod_mime_magic module allows the server to use various hints from the
        # contents of the file itself to determine its type.  The MIMEMagicFile
        # directive tells the module where the hint definitions are located.
        #
        MIMEMagicFile conf/magic
    </IfModule>

    EnableSendfile on

    # Supplemental configuration
    #
    # Load config files in the "/etc/httpd/conf.d" directory, if any.
    IncludeOptional conf.d/*.conf
  httpd-nova-api.conf: |
    <VirtualHost *:8774>
      ## Vhost docroot
      DocumentRoot "/var/www/cgi-bin/nova"

      ## Directories, there should at least be a declaration for /var/www/cgi-bin/nova

      <Directory "/var/www/cgi-bin/nova">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Require all granted
      </Directory>

      ## Logging
      # ErrorLog "/var/log/httpd/nova_wsgi_main_error.log"
      ServerSignature Off
      # CustomLog "/var/log/httpd/nova_wsgi_main_access.log" combined
      WSGIApplicationGroup %{GLOBAL}
      WSGIDaemonProcess nova_main display-name=nova-main group=nova processes=2 threads=1 user=nova
      WSGIProcessGroup nova_main
      WSGIScriptAlias / "/var/www/cgi-bin/nova/main"
      WSGIPassAuthorization On
    </VirtualHost>
